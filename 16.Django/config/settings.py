"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'j4%!#i)t8(v$zm9x1=#p28ns+4(n))85zjoi0%qrz8v_bz7d%x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'board',
    'bootstrap4',
    'account', #사용자 관리 app

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True

##################################################################
# static files (CSS, javascript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
#app 디렉토리 / static 디렉토리 아래에 저장
#python manage.py collecstatic을 이용해 static root director에 모은 뒤 서비스
##################################################################
STATIC_ROOT = os.path.join(BASE_DIR, 'statics') #스태틱 파일들을 모을 루트 경로
STATIC_URL = '/static/' #client에서 static파일들을 요청할 url의 시작 path

#app/static 이외의 디렉토리에 static파일들을 저장할 경우 그 디렉토리를 정의
#app 공통적으로 사용하거나 main페이지와 관련된 static파일들을 저장할 경로들
STATICFILES_DIR = []

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


####사용자인증관련 설정####
#Customer 모델 등록
AUTH_USER_MODEL = 'account.CustomUser'   #문자열 : app이름.모델클래스이름

####로그인 성공처리 후 이동할 url
LOGIN_REDIRECT_URL = '/'
####로그아웃 성공처리 후 이동할 URL
LOGOUT_DIRECT_URL = '/'

LOGIN_URL = '/account/login'


########################################
## media 파일(upload된 파일) 경로 설정 ##
################################3###########
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') #업로드된 파일들이 저장될 root디렉토리
MEDIA_URL = '/media/' #clien(template)에서 업로드될 파일을 요청할 때, 사용할 시작 url

